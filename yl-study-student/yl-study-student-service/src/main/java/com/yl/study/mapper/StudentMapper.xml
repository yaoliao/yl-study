<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yl.study.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.yl.study.model.Student">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="FID" jdbcType="INTEGER" property="id" />
    <result column="FName" jdbcType="VARCHAR" property="name" />
    <result column="FAge" jdbcType="INTEGER" property="age" />
    <result column="FMobile" jdbcType="VARCHAR" property="mobile" />
    <result column="FDescription" jdbcType="VARCHAR" property="description" />
    <result column="FPosition" jdbcType="INTEGER" property="position" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    FID, FName, FAge, FMobile, FDescription, FPosition
  </sql>
  <select id="selectByExample" parameterType="com.yl.study.model.StudentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_student
    where FID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_student
    where FID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yl.study.model.StudentExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yl.study.model.Student">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_student (FID, FName, FAge, 
      FMobile, FDescription, FPosition
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{mobile,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{position,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yl.study.model.Student">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        FID,
      </if>
      <if test="name != null">
        FName,
      </if>
      <if test="age != null">
        FAge,
      </if>
      <if test="mobile != null">
        FMobile,
      </if>
      <if test="description != null">
        FDescription,
      </if>
      <if test="position != null">
        FPosition,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yl.study.model.StudentExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_student
    <set>
      <if test="record.id != null">
        FID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        FName = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        FAge = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        FMobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        FDescription = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        FPosition = #{record.position,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_student
    set FID = #{record.id,jdbcType=INTEGER},
      FName = #{record.name,jdbcType=VARCHAR},
      FAge = #{record.age,jdbcType=INTEGER},
      FMobile = #{record.mobile,jdbcType=VARCHAR},
      FDescription = #{record.description,jdbcType=VARCHAR},
      FPosition = #{record.position,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yl.study.model.Student">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_student
    <set>
      <if test="name != null">
        FName = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        FAge = #{age,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        FMobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        FDescription = #{description,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        FPosition = #{position,jdbcType=INTEGER},
      </if>
    </set>
    where FID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yl.study.model.Student">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_student
    set FName = #{name,jdbcType=VARCHAR},
      FAge = #{age,jdbcType=INTEGER},
      FMobile = #{mobile,jdbcType=VARCHAR},
      FDescription = #{description,jdbcType=VARCHAR},
      FPosition = #{position,jdbcType=INTEGER}
    where FID = #{id,jdbcType=INTEGER}
  </update>

  <resultMap extends="BaseResultMap" id="Student_Pojo" type="com.yl.study.pojo.StudentPojo">
    <collection property="coursePojos" ofType="com.yl.study.pojo.CoursePojo">
      <result column="cID" jdbcType="INTEGER" property="ID" />
      <result column="cname" jdbcType="VARCHAR" property="name" />
      <result column="FStudentID" jdbcType="INTEGER" property="studentID" />
    </collection>
  </resultMap>

  <select id="findStudentPojos" resultMap="Student_Pojo">
    SELECT
        s.*, c.FID AS cID,
        c.FName AS cname,
        c.FStudentID
    FROM
        t_student s
    LEFT JOIN t_Course c
    ON
        c.FStudentID = s.FID
  </select>

</mapper>